;
;#include<mega128.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include<delay.h>
;#include<mega128.h>
;#include"LED.h"
;#include<delay.h>
;
;#include<mega128.h>
;#include<delay.h>
;#include<mega128.h>
;#include"LED.h"
;#include<delay.h>
;#include<stdio.h>
;#include"switch.h"
;#include"Sensor.h"
;#include"Motor.h"
;#include"ALGO.h"
;int R[4];
;int mode=0;
;extern unsigned int VelocityLeftmotorTCNT1, VelocityRightmotorTCNT3;
;extern int LeftstepCount, RightstepCount,aflag,vel_counter_high2,vel_counter_high1,ado;
;
;eeprom int StandardSensor[3], CenterStandardSensor[3],acc;
;
;void main(void)
; 0000 001A {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 001B // Declare your local variables here
; 0000 001C       UCSR0A=0x00;
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 001D UCSR0B=0x18;
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 001E UCSR0C=0x06;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 001F UBRR0H=0x00;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0020 UBRR0L=0x67;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0021 
; 0000 0022 UCSR1A=0x00;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0023 UCSR1B=0x18;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0024 UCSR1C=0x06;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0025 UBRR1H=0x00;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0026 UBRR1L=0x67;
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0027 
; 0000 0028 
; 0000 0029 InitializeStepMotor();
;PCODE: $00000022 VOL: 0
; 0000 002A InitializeSensor();
;PCODE: $00000023 VOL: 0
; 0000 002B InitializeLED();
;PCODE: $00000024 VOL: 0
; 0000 002C InitializeSwitch();
;PCODE: $00000025 VOL: 0
; 0000 002D LeftstepCount = 0; // 왼쪽 모터의 스텝 초기화
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 002E RightstepCount = 0; // 오른쪽 모터의 스텝 초기화
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 002F 
; 0000 0030 // Global enable interrupts
; 0000 0031 #asm("sei")
;PCODE: $0000002A VOL: 0
	sei
;PCODE: $0000002B VOL: 0
; 0000 0032 
; 0000 0033 VelocityLeftmotorTCNT1 = 65400; // 왼쪽 모터의 속도 (65200 ~ 65535)
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0034 VelocityRightmotorTCNT3 = 65400; // 오른쪽 모터의 속도 (65200 ~ 65535)
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0035 
; 0000 0036 
; 0000 0037 
; 0000 0038 
; 0000 0039 while(1)
;PCODE: $00000030 VOL: 0
; 0000 003A {
; 0000 003B if(SW1() == TRUE)
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 003C {
; 0000 003D mode++;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 003E mode%=8;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 003F LED_OFF(LED1 | LED2 | LED3 | LED4);
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 0040 switch(mode)
;PCODE: $0000003E VOL: 0
; 0000 0041 {
; 0000 0042 case 0: LED_ON(LED1); break;                   //좌측 스탠
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0043 case 1: LED_ON(LED2); break;                  //우측 스탠다
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0044 case 2: LED_ON(LED2);LED_ON(LED1); break;    ///acc
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 0045 case 3: LED_ON(LED3); break;                                //좌수법
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 0046 case 4: LED_ON(LED1);LED_ON(LED3);break;           //전좌 스탠다
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 0047 case 5: LED_ON(LED2);LED_ON(LED3);break;          //전방 센터값
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 0048 case 6: LED_ON(LED1);LED_ON(LED2);LED_ON(LED3);break;  //좌측
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 0049 case 7: LED_ON(LED4);break;                             //우
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 004A }
;PCODE: $00000085 VOL: 0
; 0000 004B }
; 0000 004C if(SW2() == TRUE)
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 004D {
; 0000 004E switch(mode)
;PCODE: $0000008A VOL: 0
; 0000 004F {
; 0000 0050 case 0:
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 0051   /*
; 0000 0052 Direction(HALF); // 반블럭 전진
; 0000 0053 Direction(HALF); // 반블럭 전진
; 0000 0054 Direction(HALF); // 반블럭 전진
; 0000 0055 Direction(HALF); // 반블럭 전진
; 0000 0056 Direction(HALF); // 반블럭 전진
; 0000 0057 Direction(HALF); // 반블럭 전진
; 0000 0058 
; 0000 0059 
; 0000 005A CenterStandardSensor[0]=10000;
; 0000 005B Direction(HALF);
; 0000 005C acc=readSensor(FRONT_SENSOR);
; 0000 005D Direction(HALF);
; 0000 005E delay_ms(500); */
; 0000 005F R[0]= readSensor(LEFT_SENSOR);
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 0060  Direction(HALF);
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 0061  R[1]=readSensor(LEFT_SENSOR);
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 0062   Direction(HALF);
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0000 0063  R[2]=readSensor(LEFT_SENSOR);
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 0064   Direction(HALF);
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0000 0065  R[3]=readSensor(LEFT_SENSOR);
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0000 0066 StandardSensor[1] = (R[1]+R[2]+R[3])/3;   //좌측 벽 정
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0000 0067 delay_ms(500);
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0000 0068 LED_OFF(LED1 | LED2 | LED3 | LED4);
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
; 0000 0069 LED_ON(LED2);
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
; 0000 006A 
; 0000 006B break;
;PCODE: $000000C1 VOL: 0
; 0000 006C 
; 0000 006D case 1:
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
; 0000 006E 
; 0000 006F  Direction(HALF);
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
; 0000 0070  R[1]=readSensor(RIGHT_SENSOR);
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
; 0000 0071   Direction(HALF);
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
; 0000 0072 
; 0000 0073 StandardSensor[2] = R[1]; // 우 벽 정보
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
; 0000 0074 
; 0000 0075 LED_OFF(LED1 | LED2 | LED3 | LED4);
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
; 0000 0076 LED_ON(LED3);
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
; 0000 0077 
; 0000 0078 /*
; 0000 0079 Direction(LEFT); // 반블럭 전진
; 0000 007A Direction(LEFT); // 반블럭 전진
; 0000 007B Direction(LEFT); // 반블럭 전진
; 0000 007C Direction(LEFT); // 반블럭 전진
; 0000 007D delay_ms(200);
; 0000 007E while(!SW2());
; 0000 007F Direction(RIGHT); // 반블럭 전진
; 0000 0080 Direction(RIGHT); // 반블럭 전진
; 0000 0081 Direction(RIGHT); // 반블럭 전진
; 0000 0082 Direction(RIGHT); // 반블럭 전진 */
; 0000 0083   /*
; 0000 0084 while(1)
; 0000 0085 {
; 0000 0086 
; 0000 0087 printf("중앙 : %d  %d  %d 좌측 : %d  %d  %d 우측 : %d  %d  %d\r\n",readSensor(FRONT_SENSOR),StandardSensor[0],CenterStandardSensor[0],readSensor(LEFT_SENSOR),StandardSensor[1],CenterStandardSensor[1],readSensor(RIGHT_SENSOR),StandardSensor[2],CenterStandardSensor[2]);
; 0000 0088 Direction(HALF);
; 0000 0089 }
; 0000 008A     */
; 0000 008B 
; 0000 008C //jDirection(HALF);
; 0000 008D    /*
; 0000 008E Direction(LEFT);
; 0000 008F Direction(LEFT);
; 0000 0090 Direction(LEFT);
; 0000 0091 Direction(LEFT);
; 0000 0092 delay_ms(500);
; 0000 0093 while(!SW2());
; 0000 0094 Direction(RIGHT);
; 0000 0095 Direction(RIGHT);
; 0000 0096 Direction(RIGHT);
; 0000 0097 Direction(RIGHT);
; 0000 0098 delay_ms(500);
; 0000 0099 while(!SW2());
; 0000 009A 
; 0000 009B Direction(HALF);
; 0000 009C Direction(HALF);
; 0000 009D Direction(HALF);
; 0000 009E Direction(HALF);
; 0000 009F Direction(HALF);
; 0000 00A0 delay_ms(100);
; 0000 00A1 while(!SW2());  */
; 0000 00A2 break;
;PCODE: $000000DB VOL: 0
; 0000 00A3 case 2:
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
; 0000 00A4 LED_OFF(LED1 | LED2 | LED3 | LED4);
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
; 0000 00A5 
; 0000 00A6 CenterStandardSensor[0]=10000;
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
; 0000 00A7 Direction(HALF);
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
; 0000 00A8 acc=readSensor(FRONT_SENSOR);
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
; 0000 00A9 Direction(HALF);
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
; 0000 00AA delay_ms(500);
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
; 0000 00AB break;
;PCODE: $000000F3 VOL: 0
; 0000 00AC case 4:
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
; 0000 00AD CenterStandardSensor[0]=10000;
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
; 0000 00AE R[0]= readSensor(FRONT_SENSOR);
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
; 0000 00AF  Direction(HALF);
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
; 0000 00B0  R[1]=readSensor(FRONT_SENSOR);
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
; 0000 00B1   Direction(HALF);
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
; 0000 00B2  R[2]=readSensor(FRONT_SENSOR);
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
; 0000 00B3   Direction(HALF);
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
; 0000 00B4  R[3]=readSensor(FRONT_SENSOR);
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
; 0000 00B5 StandardSensor[0] = (R[1]+R[2]+R[3])/3; // 전방 벽 정보
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
; 0000 00B6 delay_ms(500);
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
; 0000 00B7 LED_OFF(LED1 | LED2 | LED3 | LED4);
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
; 0000 00B8 LED_ON(LED1);
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
; 0000 00B9 break;
;PCODE: $0000012B VOL: 0
; 0000 00BA 
; 0000 00BB case 5:
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
; 0000 00BC LED_OFF(LED1 | LED2 | LED3 | LED4);
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
; 0000 00BD R[0]= readSensor(FRONT_SENSOR);
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
; 0000 00BE  Direction(HALF);
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
; 0000 00BF  R[1]=readSensor(FRONT_SENSOR);
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
; 0000 00C0   Direction(HALF);
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
; 0000 00C1  R[2]=readSensor(FRONT_SENSOR);
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
; 0000 00C2   Direction(HALF);
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
; 0000 00C3  R[3]=readSensor(FRONT_SENSOR);
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
; 0000 00C4 CenterStandardSensor[0] = (R[1]+R[2]+R[3])/3; // 자세보정 전 벽 정보
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
; 0000 00C5 delay_ms(500);
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
; 0000 00C6 LED_ON(LED1);
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
; 0000 00C7 break;
;PCODE: $00000160 VOL: 0
; 0000 00C8 case 6:
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
; 0000 00C9  LED_OFF(LED1 | LED2 | LED3 | LED4);
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
; 0000 00CA R[0]= readSensor(LEFT_SENSOR);
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
; 0000 00CB  Direction(HALF);
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
; 0000 00CC  R[1]=readSensor(LEFT_SENSOR);
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
; 0000 00CD   Direction(HALF);
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
; 0000 00CE  R[2]=readSensor(LEFT_SENSOR);
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
; 0000 00CF   Direction(HALF);
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
; 0000 00D0  R[3]=readSensor(LEFT_SENSOR);
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
; 0000 00D1 CenterStandardSensor[1] = (R[1]+R[2]+R[3])/3; // 자세보정 왼쪽 벽 정보
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
; 0000 00D2 LED_ON(LED2);
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
; 0000 00D3 break;
;PCODE: $00000195 VOL: 0
; 0000 00D4 case 7:
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
; 0000 00D5 R[0]= readSensor(RIGHT_SENSOR);
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
; 0000 00D6  Direction(HALF);
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
; 0000 00D7  R[1]=readSensor(RIGHT_SENSOR);
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
; 0000 00D8   Direction(HALF);
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
; 0000 00D9  R[2]=readSensor(RIGHT_SENSOR);
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
; 0000 00DA   Direction(HALF);
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
; 0000 00DB  R[3]=readSensor(RIGHT_SENSOR);
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
; 0000 00DC CenterStandardSensor[2] = (R[1]+R[2]+R[3])/3;// 자세보정 오른쪽 벽 정보
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
; 0000 00DD LED_OFF(LED1 | LED2 | LED3 | LED4);
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
; 0000 00DE LED_ON(LED3);
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
; 0000 00DF break;
;PCODE: $000001CA VOL: 0
; 0000 00E0    case 3:
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
; 0000 00E1         {    vel_counter_high1=65400;
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
; 0000 00E2             vel_counter_high2=65400;
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
; 0000 00E3 
; 0000 00E4                while (1)
;PCODE: $000001D2 VOL: 0
; 0000 00E5                {
; 0000 00E6 
; 0000 00E7                     if(readSensor(LEFT_SENSOR) < StandardSensor[1])     //StandardSensor[1]
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
; 0000 00E8                     {   vel_counter_high1=65400;
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
; 0000 00E9                          vel_counter_high2=65400;
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
; 0000 00EA                         ado=0;
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
; 0000 00EB                         LED_OFF(LED1 | LED2 | LED3 | LED4);
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
; 0000 00EC                         LED_ON(LED1);
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
; 0000 00ED                          Direction(HALF);
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
; 0000 00EE                          Direction(LEFT);
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
; 0000 00EF 
; 0000 00F0 
; 0000 00F1 
; 0000 00F2                          Direction(HALF);
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
; 0000 00F3 
; 0000 00F4 
; 0000 00F5                     }
; 0000 00F6                     else if(readSensor(FRONT_SENSOR) > StandardSensor[0])
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
; 0000 00F7                     {
; 0000 00F8                          if(readSensor(RIGHT_SENSOR) < StandardSensor[2])
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
; 0000 00F9                          {     vel_counter_high1=65400;
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
; 0000 00FA                                 vel_counter_high2=65400;
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
; 0000 00FB                                ado=0;
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
; 0000 00FC                               LED_OFF(LED3);
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
; 0000 00FD                               LED_ON(LED4);
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
; 0000 00FE                                 Direction(HALF);
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
; 0000 00FF                               Direction(RIGHT);
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
; 0000 0100 
; 0000 0101                               LED_OFF(LED3);
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
; 0000 0102                               LED_OFF(LED4);
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
; 0000 0103                               Direction(HALF);
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
; 0000 0104 
; 0000 0105                          }
; 0000 0106                          else
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
; 0000 0107                          {     vel_counter_high1=65400;
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
; 0000 0108                                 vel_counter_high2=65400;
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
; 0000 0109                                 ado=0;
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
; 0000 010A                               LED_ON(LED3);
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
; 0000 010B                               LED_ON(LED4);
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
; 0000 010C                              Direction(HALF);
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
; 0000 010D                               Direction(LEFT);
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
;PCODE: $00000232 VOL: 0
; 0000 010E                               Direction(LEFT);
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
; 0000 010F                              Direction(HALF);
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
; 0000 0110 
; 0000 0111                          }
;PCODE: $00000239 VOL: 0
; 0000 0112                     }
; 0000 0113                     else
;PCODE: $0000023A VOL: 0
;PCODE: $0000023B VOL: 0
; 0000 0114                     {
; 0000 0115                          LED_OFF(LED3);
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
; 0000 0116                          LED_OFF(LED4);
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
; 0000 0117                          Direction(HALF);
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
;PCODE: $00000244 VOL: 0
; 0000 0118                          if(aflag==1)
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
;PCODE: $00000247 VOL: 0
; 0000 0119                          {
; 0000 011A                          ado++;
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
;PCODE: $0000024B VOL: 0
; 0000 011B                          }
; 0000 011C 
; 0000 011D 
; 0000 011E                     }
;PCODE: $0000024C VOL: 0
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
; 0000 011F                }
;PCODE: $0000024F VOL: 0
;PCODE: $00000250 VOL: 0
; 0000 0120           }
; 0000 0121 
; 0000 0122         break;
;PCODE: $00000251 VOL: 0
; 0000 0123 }
;PCODE: $00000252 VOL: 0
; 0000 0124 }
; 0000 0125 }
;PCODE: $00000253 VOL: 0
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
; 0000 0126 
; 0000 0127 }
;PCODE: $00000256 VOL: 0
;PCODE: $00000257 VOL: 0
;PCODE: $00000258 VOL: 0
