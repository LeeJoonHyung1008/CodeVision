;#include <mega128.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include "switch.h"
;#include "LED.h"
;
;// Declare your global variables here
;     struct Buttons{
;          char SW1;
;          char SW2;
;          }Button;
;// External Interrupt 0 service routine
;interrupt [EXT_INT0] void ext_int0_isr(void)
; 0000 000C {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 000D // Place your code here
; 0000 000E      Button.SW1 = TRUE;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 000F }
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;
;// External Interrupt 1 service routine
;interrupt [EXT_INT1] void ext_int1_isr(void)
; 0000 0013 {
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0014 // Place your code here
; 0000 0015      Button.SW2 = TRUE;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 0016 }
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;
;void InitializeSwitch(void)
; 0000 0019 {
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 001A // ½ºÀ§Ä¡ PORTD 0,1
; 0000 001B      PORTD &= 0xfc;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 001C      DDRD &= 0xfc;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 001D 
; 0000 001E      EICRA=0x0A;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 001F      EICRB=0x00;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0020      EIMSK=0x03;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0021      EIFR=0x03;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0022 }
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;char SW1(void)
; 0000 0024 {
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0025      char ret;
; 0000 0026 
; 0000 0027      ret = Button.SW1;
;PCODE: $00000030 VOL: 0
;	ret -> R17
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 0028      Button.SW1 = FALSE;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0029 
; 0000 002A      return ret;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 002B }
;PCODE: $00000038 VOL: 0
;
;char SW2(void)
; 0000 002E {
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 002F      char ret;
; 0000 0030 
; 0000 0031      ret = Button.SW2;
;PCODE: $0000003B VOL: 0
;	ret -> R17
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0032      Button.SW2 = FALSE;
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0033 
; 0000 0034      return ret;
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0035 }
;PCODE: $00000045 VOL: 0
